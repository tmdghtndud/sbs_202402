#include <iostream>

using namespace std;

void main()
{
	// 1. 숙제풀이
	// 
	// ChatGPT 쓰신것처럼 보이는 분도있는데
	// 그냥 쓰지마시고 숙제하지마세요.
	// 
	// 어려운 수도코드 -> 코드로 바꾸는 행위가아니라
	// 목적만 가진채 -> 이걸 만들어줘
	//  이거는 안좋아요
	// 
	// 숙제를 하면 
	//   제가 피드백을 드려요. (쉬는시간 틈틈히 활용해서 드릴예정이에요.)
	// 
	// 숙제를 안하면
	//   제가 뭐라고 안할거에요.
	//   그냥 안하셔도 상관없습니다.
	//   다만 안하면 수업 못따라옵니다.
	// 
	// 웬만하면 배우는과정중에는 chatgpt 그렇게 도움안됩니다.
	//   
	// 
	//  1) BMI 측정 프로그램 만들기

	// 프로그램을 만들때
	// 수도코드라는게 항상 들어갈수밖에 없어요.

	// 너무 간단한 프로그램이라 수도코드라는게 존재하지 않을것같다
	// 라는 생각을 하시는분들 많을텐데

	// 아무리 간단한 프로그램이어도 수도코드가 존재는 합니다.
	// 다만 너무 간단해서 머리사고회로를 거치기전에 적을수있을 정도라 문제인거지

	// 수도코드 : 만들려는 프로그램을 컴퓨터가 알아들을만한 어휘로 풀어서 설명하는 행위
	// 
	// 수도코드를 잘 작성하는 사람은
	//   코딩을 잘하는 사람일 수밖에 없어요.

	// 무의식중에 수도코드를 작성하고 그걸 바로 코드로 바꾸는 능력이
	// 탁월하신분들이 종종있는데, 
	// 이분들은 그냥 재능있는거니까, 재능있는데 활용하는 방법을 배우는게 나쁜일은 아니죠?

	
	// 1) BMI 측정 프로그램 만들기

	// 수도코드 - 문법정의 
	// [출력] 키(m)를 입력해주세요.
	printf("키(m)를 입력해주세요.\n");

	// [입력] height변수
	float height = 0;
	scanf_s("%f", &height);

	// [출력] 몸무게 (kg)을 입력해주세요.
	printf("몸무게 (kg)을 입력해주세요.\n");

	// [입력] weight변수
	float weight = 0;
	scanf_s("%f", &weight);

	// [연산] BMI = weight / (height * height)
	
	//변수명 규칙
	// 불가능한 규칙, 가능하지만 권장되지않는 규칙

	//불가능한 규칙
	// 1. 변수명이 숫자로 시작하는 경우
	// float 2myNumber = 0;
	// 2. 변수명이 예약어인 경우
	// int float = 3;
	// 3. 소괄호, 대문자, 중괄호 등 안됩니다.
	// int (a3. = 0;
	// 4. - 불가능
	// int my-number = 0;

	//가능하지만 권장되지않는 규칙
	int 한글 = 0;
	// 한글, 특수문자 가능한데, 쓰지마세요.
	// 진짜 좀 이름있는 회사에서도 하시는분 있어요..
	

	// 이거는 상황에따라 모두 쓰임새가 있어요.
	int MY_NUMBER = 0;
	int my_number = 0;
	int myNumber = 0;
	int MyNumber = 0;

	// 대부분은 3번케이스 (카멜케이스) myNumber
	// 제 수업때는 변수명 : 카멜케이스
	//            함수명 : 파스칼케이스 (4번)
	
	// 정답이 회사마다 달라요.
	//  + 상식 (까먹어도 되는내용) 
	//   MS에서는 C++은 변수는 2번케이스 (스네이크 케이스) 를 지향하도록 문서가 적혀있습니다.
	//   웃긴건 지들이 만든 라이브러리에서는 3번으로 되어있어요.

	int HP;
	int hp;
	int hP;

	// id
	// healthPoint

	// 띄어쓰기를 할건지에 따라 변수명을 정하는게 마음 편해요.

	// [연산] BMI = weight / (height * height)
	float bmi = weight / (height * height);


	// [출력] BMI 지수 : [BMI]
	printf("BMI 지수 : [%f]\n", bmi);
	
	// if( bmi < 18.5 ) 
	//	[출력] 저체중입니다.
	// else if ( bmi <= 23 )
	//	[출력] 정상체중입니다.
	// else if (bmi <= 25)
	//	[출력] 과체중입니다.
	// else if (bmi <= 30)
	//	[출력] 비만입니다.
	// else 
	//	[출력] 고도비만입니다.

	// 0 < bmi < 18.5 에 대해
	// 비교연산자는 결과가 항상 0이나 1로 나온다고했습니다.

	// true (1)
	// 0 < bmi => 1 (true)
	// 1 < 18.5 => 1 (true)

	//안 배운 연산자
	// 자주쓰이는건 4개정도 더있는데
	// 그중에서 2개만 먼저 알려드릴게요
	// && => and 연산자 (한국어로 풀면 보통 ~~ 이고)
	// || => or 연산자 (한국어로 풀면 보통 ~~ 거나)

	// 사람의 시선이 왼쪽에서 오른쪽
	// 왼쪽에 작은값, 오른쪽에 큰값을 넣는게 보편적으로 0.1초라도 읽는속도를 빠르게합니다.
	// 좋은코드에서 제1조건은 가독성
	// 그래서 웬만하면 < 부등로 사용하세요. (이거 실제로 펄어비스 코딩 룰이었어요.)
	if (0 < bmi && bmi < 18.5)
	{
		printf("저체중입니다.\n");
	}
	else if (bmi <= 23)
	{
		printf("정상체중입니다.\n");
	}
	else if (bmi <= 25)
	{
		printf("과체중입니다.\n");
	}
	else if (bmi <= 30)
	{
		printf("비만입니다.\n");
	}
	else
	{
		printf("고도비만입니다.\n");
	}


}

/*
 1. BMI 측정 프로그램 만들기
	bmi 공식 : (kg) / (m)^2
 // 출력예시
	키(m)를 입력해주세요.
	몸무게 (kg)을 입력해주세요.
	BMI 지수 : 24.5
	과체중입니다. (0 ~ 18.5 저체중, ~ 23 정상체중, ~25 과체중 , ~30 비만, ~ 무한대 고도비만)
*/

/*
 2. 학점 계산기
 // 출력예시
 //	 중간평가 점수를 입력해주세요.
 //	 기말평가 점수를 입력해주세요.
 //  출석점수를 입력해주세요.
 //  과제 점수를 입력해주세요.
 // F입니다. (0 ~ 60 F, ~ 70 D, ~ 80 C, ~ 90 B, ~ 100 A)
*/

/*
3. 홀수짝수 판별기
 // 출력 예시
 // 숫자를 입력해주세요. [14]
 // 14는 짝수입니다.
*/